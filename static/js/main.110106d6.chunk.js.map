{"version":3,"sources":["components/SearchBox.js","components/Card.js","components/CardList.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["SearchBox","searchChange","className","type","placeholder","onChange","Card","robot","name","email","id","alt","src","CardList","robots","map","i","Scroll","props","style","overflow","border","height","children","App","onSearchChange","event","setState","searchfield","target","value","state","fetch","then","response","json","users","this","filteredRobots","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAeeA,EAbG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aACnB,OACC,qBAAKC,UAAU,MAAf,SACC,uBACCC,KAAK,SACLD,UAAU,mCACVE,YAAY,gBACZC,SAAUJ,OCOCK,EAdH,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACNC,EAAgBD,EAAhBC,KAAKC,EAAWF,EAAXE,MAAMC,EAAKH,EAALG,GAClB,OACC,sBAAKR,UAAU,sDAAf,UACC,qBAAKS,IAAI,SAASC,IAAG,+BAA0BF,KAE/C,gCACC,6BAAKF,IACL,4BAAIC,SALoE,OCU7DI,EAZE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAClB,OACC,8BAEEA,EAAOC,KAAI,SAACR,EAAMS,GACjB,OAAO,cAAC,EAAD,CAAMT,MAAOO,EAAOE,IAASA,SCE1BC,EARA,SAACC,GACf,OACC,qBAAKC,MAAO,CAACC,SAAS,OAAQC,OAAO,kBAAmBC,OAAO,SAA/D,SACEJ,EAAMK,YCuCKC,G,wDArCd,aAAe,IAAD,8BACb,gBAcDC,eAAiB,SAACC,GACjB,EAAKC,SAAS,CAACC,YAAaF,EAAMG,OAAOC,SAdzC,EAAKC,MAAQ,CACZjB,OAAQ,GACRc,YAAa,IAJD,E,qDAQd,WAAqB,IAAD,OACnBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAQ,EAAKT,SAAS,CAACb,OAAQsB,S,oBAQrC,WACA,MAA4BC,KAAKN,MAA1BjB,EAAP,EAAOA,OAAQc,EAAf,EAAeA,YACTU,EAAgBxB,EAAOyB,QAAO,SAAAhC,GACnC,OAAOA,EAAMC,KAAKgC,cAAcC,SAASb,EAAYY,kBAEtD,OACC,sBAAKtC,UAAU,KAAf,UACC,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWD,aAAcoC,KAAKZ,iBAC9B,cAAC,EAAD,UACA,cAAC,EAAD,CAAUX,OAAQwB,a,GA9BJI,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.110106d6.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst SearchBox = ({searchChange}) => {\r\n\treturn(\r\n\t\t<div className='pa2'> \r\n\t\t\t<input \r\n\t\t\t\ttype='search' \r\n\t\t\t\tclassName='pa3 ba b--green bg-lightest-blue' \r\n\t\t\t\tplaceholder='search robots'\r\n\t\t\t\tonChange={searchChange}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Card =({robot}) => {\r\n\tconst {name,email,id}= robot;\r\n\treturn (\r\n\t\t<div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5' key={'id'}> \r\n\t\t\t<img alt='wiiii3' src={`https://robohash.org/${id}`}>\r\n\t\t\t</img> \r\n\t\t\t<div>\r\n\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t<p>{email}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{\r\n\t\t\t\trobots.map((robot,i) => {\r\n\t\t\t\t\treturn <Card robot={robots[i]} key={i} />\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n\treturn(\r\n\t\t<div style={{overflow:'auto', border:'5px solid black', height:'800px'}}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\nimport SearchBox from '../components/SearchBox';\r\nimport CardList from '../components/CardList';\r\nimport Scroll from  '../components/Scroll';\r\nimport './App.css';\r\n\r\nclass App extends Component{\r\n\tconstructor() {\r\n\t\tsuper ()\r\n\t\tthis.state = {\r\n\t\t\trobots: [],\r\n\t\t\tsearchfield: ''\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t.then(response=> response.json())\r\n\t\t.then(users=>{this.setState({robots: users})\r\n\t\t});\r\n\t}\r\n\r\n\tonSearchChange = (event)=> {\r\n\t\tthis.setState({searchfield: event.target.value});\r\n\t}\r\n\t \r\n\t\trender () {\r\n\t\tconst {robots, searchfield}=this.state;\r\n\t\tconst filteredRobots= robots.filter(robot=>{\r\n\t\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n\t\t})\r\n\t\treturn(\r\n\t\t\t<div className='tc'> \r\n\t\t\t\t<h1 className='f1'>RoboFriends</h1>\r\n\t\t\t\t<SearchBox searchChange={this.onSearchChange} />\r\n\t\t\t\t<Scroll>\r\n\t\t\t\t<CardList robots={filteredRobots} />\r\n\t\t\t\t</Scroll>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App'\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons'; \n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}